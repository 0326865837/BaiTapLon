#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="quanlyhocsinhcap2")]
	public partial class HocSinhDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertgiaovien(giaovien instance);
    partial void Updategiaovien(giaovien instance);
    partial void Deletegiaovien(giaovien instance);
    partial void Inserthocsinh(hocsinh instance);
    partial void Updatehocsinh(hocsinh instance);
    partial void Deletehocsinh(hocsinh instance);
    partial void Insertlop(lop instance);
    partial void Updatelop(lop instance);
    partial void Deletelop(lop instance);
    #endregion
		
		public HocSinhDataContext() : 
				base(global::BLL.Properties.Settings.Default.quanlyhocsinhcap2ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HocSinhDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HocSinhDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HocSinhDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HocSinhDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<giaovien> giaoviens
		{
			get
			{
				return this.GetTable<giaovien>();
			}
		}
		
		public System.Data.Linq.Table<hocsinh> hocsinhs
		{
			get
			{
				return this.GetTable<hocsinh>();
			}
		}
		
		public System.Data.Linq.Table<lop> lops
		{
			get
			{
				return this.GetTable<lop>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.giaovien")]
	public partial class giaovien : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _magv;
		
		private string _tengv;
		
		private string _taikhoan;
		
		private string _matkhau;
		
		private string _quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmagvChanging(string value);
    partial void OnmagvChanged();
    partial void OntengvChanging(string value);
    partial void OntengvChanged();
    partial void OntaikhoanChanging(string value);
    partial void OntaikhoanChanged();
    partial void OnmatkhauChanging(string value);
    partial void OnmatkhauChanged();
    partial void OnquyenChanging(string value);
    partial void OnquyenChanged();
    #endregion
		
		public giaovien()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_magv", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string magv
		{
			get
			{
				return this._magv;
			}
			set
			{
				if ((this._magv != value))
				{
					this.OnmagvChanging(value);
					this.SendPropertyChanging();
					this._magv = value;
					this.SendPropertyChanged("magv");
					this.OnmagvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tengv", DbType="VarChar(200)")]
		public string tengv
		{
			get
			{
				return this._tengv;
			}
			set
			{
				if ((this._tengv != value))
				{
					this.OntengvChanging(value);
					this.SendPropertyChanging();
					this._tengv = value;
					this.SendPropertyChanged("tengv");
					this.OntengvChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_taikhoan", DbType="VarChar(100)")]
		public string taikhoan
		{
			get
			{
				return this._taikhoan;
			}
			set
			{
				if ((this._taikhoan != value))
				{
					this.OntaikhoanChanging(value);
					this.SendPropertyChanging();
					this._taikhoan = value;
					this.SendPropertyChanged("taikhoan");
					this.OntaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_matkhau", DbType="VarChar(100)")]
		public string matkhau
		{
			get
			{
				return this._matkhau;
			}
			set
			{
				if ((this._matkhau != value))
				{
					this.OnmatkhauChanging(value);
					this.SendPropertyChanging();
					this._matkhau = value;
					this.SendPropertyChanged("matkhau");
					this.OnmatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quyen", DbType="VarChar(20)")]
		public string quyen
		{
			get
			{
				return this._quyen;
			}
			set
			{
				if ((this._quyen != value))
				{
					this.OnquyenChanging(value);
					this.SendPropertyChanging();
					this._quyen = value;
					this.SendPropertyChanged("quyen");
					this.OnquyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.hocsinh")]
	public partial class hocsinh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _mahs;
		
		private string _hoten;
		
		private string _gioitinh;
		
		private string _diachi;
		
		private System.Nullable<System.DateTime> _ngaysinh;
		
		private string _malop;
		
		private string _sodienthoai;
		
		private string _img;
		
		private EntityRef<lop> _lop;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmahsChanging(string value);
    partial void OnmahsChanged();
    partial void OnhotenChanging(string value);
    partial void OnhotenChanged();
    partial void OngioitinhChanging(string value);
    partial void OngioitinhChanged();
    partial void OndiachiChanging(string value);
    partial void OndiachiChanged();
    partial void OnngaysinhChanging(System.Nullable<System.DateTime> value);
    partial void OnngaysinhChanged();
    partial void OnmalopChanging(string value);
    partial void OnmalopChanged();
    partial void OnsodienthoaiChanging(string value);
    partial void OnsodienthoaiChanged();
    partial void OnimgChanging(string value);
    partial void OnimgChanged();
    #endregion
		
		public hocsinh()
		{
			this._lop = default(EntityRef<lop>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mahs", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string mahs
		{
			get
			{
				return this._mahs;
			}
			set
			{
				if ((this._mahs != value))
				{
					this.OnmahsChanging(value);
					this.SendPropertyChanging();
					this._mahs = value;
					this.SendPropertyChanged("mahs");
					this.OnmahsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoten", DbType="VarChar(200)")]
		public string hoten
		{
			get
			{
				return this._hoten;
			}
			set
			{
				if ((this._hoten != value))
				{
					this.OnhotenChanging(value);
					this.SendPropertyChanging();
					this._hoten = value;
					this.SendPropertyChanged("hoten");
					this.OnhotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioitinh", DbType="VarChar(10)")]
		public string gioitinh
		{
			get
			{
				return this._gioitinh;
			}
			set
			{
				if ((this._gioitinh != value))
				{
					this.OngioitinhChanging(value);
					this.SendPropertyChanging();
					this._gioitinh = value;
					this.SendPropertyChanged("gioitinh");
					this.OngioitinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diachi", DbType="VarChar(200)")]
		public string diachi
		{
			get
			{
				return this._diachi;
			}
			set
			{
				if ((this._diachi != value))
				{
					this.OndiachiChanging(value);
					this.SendPropertyChanging();
					this._diachi = value;
					this.SendPropertyChanged("diachi");
					this.OndiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaysinh", DbType="Date")]
		public System.Nullable<System.DateTime> ngaysinh
		{
			get
			{
				return this._ngaysinh;
			}
			set
			{
				if ((this._ngaysinh != value))
				{
					this.OnngaysinhChanging(value);
					this.SendPropertyChanging();
					this._ngaysinh = value;
					this.SendPropertyChanged("ngaysinh");
					this.OnngaysinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_malop", DbType="VarChar(100)")]
		public string malop
		{
			get
			{
				return this._malop;
			}
			set
			{
				if ((this._malop != value))
				{
					if (this._lop.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmalopChanging(value);
					this.SendPropertyChanging();
					this._malop = value;
					this.SendPropertyChanged("malop");
					this.OnmalopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sodienthoai", DbType="VarChar(100)")]
		public string sodienthoai
		{
			get
			{
				return this._sodienthoai;
			}
			set
			{
				if ((this._sodienthoai != value))
				{
					this.OnsodienthoaiChanging(value);
					this.SendPropertyChanging();
					this._sodienthoai = value;
					this.SendPropertyChanged("sodienthoai");
					this.OnsodienthoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img", DbType="VarChar(300)")]
		public string img
		{
			get
			{
				return this._img;
			}
			set
			{
				if ((this._img != value))
				{
					this.OnimgChanging(value);
					this.SendPropertyChanging();
					this._img = value;
					this.SendPropertyChanged("img");
					this.OnimgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lop_hocsinh", Storage="_lop", ThisKey="malop", OtherKey="malop", IsForeignKey=true)]
		public lop lop
		{
			get
			{
				return this._lop.Entity;
			}
			set
			{
				lop previousValue = this._lop.Entity;
				if (((previousValue != value) 
							|| (this._lop.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._lop.Entity = null;
						previousValue.hocsinhs.Remove(this);
					}
					this._lop.Entity = value;
					if ((value != null))
					{
						value.hocsinhs.Add(this);
						this._malop = value.malop;
					}
					else
					{
						this._malop = default(string);
					}
					this.SendPropertyChanged("lop");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.lop")]
	public partial class lop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _malop;
		
		private string _tenlop;
		
		private EntitySet<hocsinh> _hocsinhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmalopChanging(string value);
    partial void OnmalopChanged();
    partial void OntenlopChanging(string value);
    partial void OntenlopChanged();
    #endregion
		
		public lop()
		{
			this._hocsinhs = new EntitySet<hocsinh>(new Action<hocsinh>(this.attach_hocsinhs), new Action<hocsinh>(this.detach_hocsinhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_malop", DbType="VarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string malop
		{
			get
			{
				return this._malop;
			}
			set
			{
				if ((this._malop != value))
				{
					this.OnmalopChanging(value);
					this.SendPropertyChanging();
					this._malop = value;
					this.SendPropertyChanged("malop");
					this.OnmalopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenlop", DbType="VarChar(200)")]
		public string tenlop
		{
			get
			{
				return this._tenlop;
			}
			set
			{
				if ((this._tenlop != value))
				{
					this.OntenlopChanging(value);
					this.SendPropertyChanging();
					this._tenlop = value;
					this.SendPropertyChanged("tenlop");
					this.OntenlopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="lop_hocsinh", Storage="_hocsinhs", ThisKey="malop", OtherKey="malop")]
		public EntitySet<hocsinh> hocsinhs
		{
			get
			{
				return this._hocsinhs;
			}
			set
			{
				this._hocsinhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_hocsinhs(hocsinh entity)
		{
			this.SendPropertyChanging();
			entity.lop = this;
		}
		
		private void detach_hocsinhs(hocsinh entity)
		{
			this.SendPropertyChanging();
			entity.lop = null;
		}
	}
}
#pragma warning restore 1591
